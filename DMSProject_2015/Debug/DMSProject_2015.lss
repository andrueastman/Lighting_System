
DMSProject_2015.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b2  00800100  0000081e  000008b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000081e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  008001b2  008001b2  00000964  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000964  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000994  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a5c  00000000  00000000  000009ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001e0  00000000  00000000  00001448  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002c4  00000000  00000000  00001628  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e8  00000000  00000000  000018ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000020d  00000000  00000000  000019d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000057d  00000000  00000000  00001be1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  0000215e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 2d 02 	jmp	0x45a	; 0x45a <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e1       	ldi	r30, 0x1E	; 30
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 3b       	cpi	r26, 0xB2	; 178
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 eb       	ldi	r26, 0xB2	; 178
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 3b       	cpi	r26, 0xBA	; 186
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 03 01 	call	0x206	; 0x206 <main>
  9e:	0c 94 0d 04 	jmp	0x81a	; 0x81a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <LCD_cmd>:
static int mode;
static int outside;
static uint16_t brightness;
void LCD_cmd(unsigned char cmd)
{
	LCD_DATA=cmd;
  a6:	8b b9       	out	0x0b, r24	; 11
	Control_PORT =(0<<RS)|(0<<RW)|(1<<En);	// RS and RW as LOW and EN as HIGH
  a8:	84 e0       	ldi	r24, 0x04	; 4
  aa:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	89 ef       	ldi	r24, 0xF9	; 249
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	01 97       	sbiw	r24, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <LCD_cmd+0xa>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <LCD_cmd+0x10>
  b6:	00 00       	nop
	_delay_ms(1);
	Control_PORT =(0<<RS)|(0<<RW)|(0<<En);	// RS, RW , LOW and EN as LOW
  b8:	15 b8       	out	0x05, r1	; 5
  ba:	89 ef       	ldi	r24, 0xF9	; 249
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	f1 f7       	brne	.-4      	; 0xbe <LCD_cmd+0x18>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <LCD_cmd+0x1e>
  c4:	00 00       	nop
  c6:	08 95       	ret

000000c8 <LCD_write>:
}


void LCD_write(unsigned char data)
{
	LCD_DATA= data;
  c8:	8b b9       	out	0x0b, r24	; 11
	Control_PORT = (1<<RS)|(0<<RW)|(1<<En);	// RW as LOW and RS, EN as HIGH
  ca:	85 e0       	ldi	r24, 0x05	; 5
  cc:	85 b9       	out	0x05, r24	; 5
  ce:	89 ef       	ldi	r24, 0xF9	; 249
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	01 97       	sbiw	r24, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <LCD_write+0xa>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <LCD_write+0x10>
  d8:	00 00       	nop
	_delay_ms(1);
	Control_PORT = (1<<RS)|(0<<RW)|(0<<En);	// EN and RW as LOW and RS HIGH
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	85 b9       	out	0x05, r24	; 5
  de:	89 ef       	ldi	r24, 0xF9	; 249
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <LCD_write+0x1a>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <LCD_write+0x20>
  e8:	00 00       	nop
  ea:	08 95       	ret

000000ec <move_forward>:
	return ;
}

void move_forward(int time){
	int seconds=0;
	TCNT1 = 0;
  ec:	10 92 85 00 	sts	0x0085, r1
  f0:	10 92 84 00 	sts	0x0084, r1
	PORTB |= 1 << PINB6;
  f4:	2e 9a       	sbi	0x05, 6	; 5
	_delay_ms(1);			// delay to get things executed
	return ;
}

void move_forward(int time){
	int seconds=0;
  f6:	40 e0       	ldi	r20, 0x00	; 0
  f8:	50 e0       	ldi	r21, 0x00	; 0
	TCNT1 = 0;
	PORTB |= 1 << PINB6;
	while(seconds<time){//one second passes
		if (TCNT1 > 15625)
  fa:	e4 e8       	ldi	r30, 0x84	; 132
  fc:	f0 e0       	ldi	r31, 0x00	; 0

void move_forward(int time){
	int seconds=0;
	TCNT1 = 0;
	PORTB |= 1 << PINB6;
	while(seconds<time){//one second passes
  fe:	09 c0       	rjmp	.+18     	; 0x112 <move_forward+0x26>
		if (TCNT1 > 15625)
 100:	20 81       	ld	r18, Z
 102:	31 81       	ldd	r19, Z+1	; 0x01
 104:	2a 30       	cpi	r18, 0x0A	; 10
 106:	3d 43       	sbci	r19, 0x3D	; 61
 108:	d8 f3       	brcs	.-10     	; 0x100 <move_forward+0x14>
		{
			TCNT1 = 0;
 10a:	11 82       	std	Z+1, r1	; 0x01
 10c:	10 82       	st	Z, r1
			seconds++;
 10e:	4f 5f       	subi	r20, 0xFF	; 255
 110:	5f 4f       	sbci	r21, 0xFF	; 255

void move_forward(int time){
	int seconds=0;
	TCNT1 = 0;
	PORTB |= 1 << PINB6;
	while(seconds<time){//one second passes
 112:	48 17       	cp	r20, r24
 114:	59 07       	cpc	r21, r25
 116:	34 f4       	brge	.+12     	; 0x124 <move_forward+0x38>
		if (TCNT1 > 15625)
 118:	20 81       	ld	r18, Z
 11a:	31 81       	ldd	r19, Z+1	; 0x01
 11c:	2a 30       	cpi	r18, 0x0A	; 10
 11e:	3d 43       	sbci	r19, 0x3D	; 61
 120:	a0 f7       	brcc	.-24     	; 0x10a <move_forward+0x1e>
 122:	ee cf       	rjmp	.-36     	; 0x100 <move_forward+0x14>
		{
			TCNT1 = 0;
			seconds++;
		}	
	}
	PORTB &= 0 << PINB6;
 124:	85 b1       	in	r24, 0x05	; 5
 126:	15 b8       	out	0x05, r1	; 5
 128:	08 95       	ret

0000012a <move_back>:
}


void move_back(int time){
	int seconds=0;
	TCNT1 = 0;
 12a:	10 92 85 00 	sts	0x0085, r1
 12e:	10 92 84 00 	sts	0x0084, r1
	PORTB |= 1 << PINB7;
 132:	2f 9a       	sbi	0x05, 7	; 5
	
}


void move_back(int time){
	int seconds=0;
 134:	40 e0       	ldi	r20, 0x00	; 0
 136:	50 e0       	ldi	r21, 0x00	; 0
	TCNT1 = 0;
	PORTB |= 1 << PINB7;
	while(seconds<time){
		if (TCNT1 > 15625)//one second passes
 138:	e4 e8       	ldi	r30, 0x84	; 132
 13a:	f0 e0       	ldi	r31, 0x00	; 0

void move_back(int time){
	int seconds=0;
	TCNT1 = 0;
	PORTB |= 1 << PINB7;
	while(seconds<time){
 13c:	09 c0       	rjmp	.+18     	; 0x150 <move_back+0x26>
		if (TCNT1 > 15625)//one second passes
 13e:	20 81       	ld	r18, Z
 140:	31 81       	ldd	r19, Z+1	; 0x01
 142:	2a 30       	cpi	r18, 0x0A	; 10
 144:	3d 43       	sbci	r19, 0x3D	; 61
 146:	d8 f3       	brcs	.-10     	; 0x13e <move_back+0x14>
		{
			TCNT1 = 0;
 148:	11 82       	std	Z+1, r1	; 0x01
 14a:	10 82       	st	Z, r1
			seconds++;
 14c:	4f 5f       	subi	r20, 0xFF	; 255
 14e:	5f 4f       	sbci	r21, 0xFF	; 255

void move_back(int time){
	int seconds=0;
	TCNT1 = 0;
	PORTB |= 1 << PINB7;
	while(seconds<time){
 150:	48 17       	cp	r20, r24
 152:	59 07       	cpc	r21, r25
 154:	34 f4       	brge	.+12     	; 0x162 <move_back+0x38>
		if (TCNT1 > 15625)//one second passes
 156:	20 81       	ld	r18, Z
 158:	31 81       	ldd	r19, Z+1	; 0x01
 15a:	2a 30       	cpi	r18, 0x0A	; 10
 15c:	3d 43       	sbci	r19, 0x3D	; 61
 15e:	a0 f7       	brcc	.-24     	; 0x148 <move_back+0x1e>
 160:	ee cf       	rjmp	.-36     	; 0x13e <move_back+0x14>
		{
			TCNT1 = 0;
			seconds++;
		}
	}
	PORTB &= 0 << PINB7;
 162:	85 b1       	in	r24, 0x05	; 5
 164:	15 b8       	out	0x05, r1	; 5
 166:	08 95       	ret

00000168 <LCDWriteString>:
}

void LCDWriteString(const char *msg)
{
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	ec 01       	movw	r28, r24
		LCD_cmd(0x01); // clear LCD
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_cmd>
 174:	89 ef       	ldi	r24, 0xF9	; 249
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <LCDWriteString+0x10>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <LCDWriteString+0x16>
 17e:	00 00       	nop
		_delay_ms(1);
		
		LCD_cmd(0x0E); // cursor ON
 180:	8e e0       	ldi	r24, 0x0E	; 14
 182:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_cmd>
 186:	89 ef       	ldi	r24, 0xF9	; 249
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <LCDWriteString+0x22>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <LCDWriteString+0x28>
 190:	00 00       	nop
		_delay_ms(1);
		
		LCD_cmd(0x80); // ---8 go to first line and --0 is for 0th position
 192:	80 e8       	ldi	r24, 0x80	; 128
 194:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_cmd>
 198:	89 ef       	ldi	r24, 0xF9	; 249
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <LCDWriteString+0x34>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <LCDWriteString+0x3a>
 1a2:	00 00       	nop
		_delay_ms(1);
	int i=0;
	while (msg[i]!='\0'){
 1a4:	88 81       	ld	r24, Y
 1a6:	88 23       	and	r24, r24
 1a8:	31 f0       	breq	.+12     	; 0x1b6 <LCDWriteString+0x4e>
 1aa:	21 96       	adiw	r28, 0x01	; 1
		LCD_write(msg[i]);
 1ac:	0e 94 64 00 	call	0xc8	; 0xc8 <LCD_write>
		_delay_ms(1);
		
		LCD_cmd(0x80); // ---8 go to first line and --0 is for 0th position
		_delay_ms(1);
	int i=0;
	while (msg[i]!='\0'){
 1b0:	89 91       	ld	r24, Y+
 1b2:	81 11       	cpse	r24, r1
 1b4:	fb cf       	rjmp	.-10     	; 0x1ac <LCDWriteString+0x44>
		LCD_write(msg[i]);
		i++;
	}
}
 1b6:	df 91       	pop	r29
 1b8:	cf 91       	pop	r28
 1ba:	08 95       	ret

000001bc <init_LCD>:

void init_LCD(){
		LCD_cmd(0x38); // initialization of 16X2 LCD in 8bit mode
 1bc:	88 e3       	ldi	r24, 0x38	; 56
 1be:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_cmd>
 1c2:	89 ef       	ldi	r24, 0xF9	; 249
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <init_LCD+0xa>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <init_LCD+0x10>
 1cc:	00 00       	nop
		_delay_ms(1);
		
		LCD_cmd(0x01); // clear LCD
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_cmd>
 1d4:	89 ef       	ldi	r24, 0xF9	; 249
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <init_LCD+0x1c>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <init_LCD+0x22>
 1de:	00 00       	nop
		_delay_ms(1);
		
		LCD_cmd(0x0E); // cursor ON
 1e0:	8e e0       	ldi	r24, 0x0E	; 14
 1e2:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_cmd>
 1e6:	89 ef       	ldi	r24, 0xF9	; 249
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <init_LCD+0x2e>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <init_LCD+0x34>
 1f0:	00 00       	nop
		_delay_ms(1);
		
		LCD_cmd(0x80); // ---8 go to first line and --0 is for 0th position
 1f2:	80 e8       	ldi	r24, 0x80	; 128
 1f4:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_cmd>
 1f8:	89 ef       	ldi	r24, 0xF9	; 249
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <init_LCD+0x40>
 200:	00 c0       	rjmp	.+0      	; 0x202 <init_LCD+0x46>
 202:	00 00       	nop
 204:	08 95       	ret

00000206 <main>:
		_delay_ms(1);	
}
int main(void)
{
	DDRB=0xFF;//set pin 0 and 1 of port B to be output for the motor
 206:	8f ef       	ldi	r24, 0xFF	; 255
 208:	84 b9       	out	0x04, r24	; 4
	DDRD=0xFF;//set port D to be outputs for LDR
 20a:	8a b9       	out	0x0a, r24	; 10
	DDRC=0x00;//set port C to be input
 20c:	17 b8       	out	0x07, r1	; 7

	TCCR1B |= 1<<CS10 | 1<<CS11;//set prescaler of internal clock to 64
 20e:	e1 e8       	ldi	r30, 0x81	; 129
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	80 81       	ld	r24, Z
 214:	83 60       	ori	r24, 0x03	; 3
 216:	80 83       	st	Z, r24
	PORTB |=1<<PORTB3;
 218:	2b 9a       	sbi	0x05, 3	; 5
	state=state_closed;
 21a:	10 92 b9 01 	sts	0x01B9, r1
 21e:	10 92 b8 01 	sts	0x01B8, r1
	outside=outside_bright;
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	90 93 b5 01 	sts	0x01B5, r25
 22a:	80 93 b4 01 	sts	0x01B4, r24
	mode=auto_mode;
 22e:	90 93 b7 01 	sts	0x01B7, r25
 232:	80 93 b6 01 	sts	0x01B6, r24
 236:	8f e4       	ldi	r24, 0x4F	; 79
 238:	93 ec       	ldi	r25, 0xC3	; 195
 23a:	01 97       	sbiw	r24, 0x01	; 1
 23c:	f1 f7       	brne	.-4      	; 0x23a <main+0x34>
 23e:	00 c0       	rjmp	.+0      	; 0x240 <main+0x3a>
 240:	00 00       	nop
	_delay_ms(200);//pause 2 seconds
	
	ADCSRA=0x8F;
 242:	8f e8       	ldi	r24, 0x8F	; 143
 244:	80 93 7a 00 	sts	0x007A, r24
	ADMUX=0x20;
 248:	80 e2       	ldi	r24, 0x20	; 32
 24a:	80 93 7c 00 	sts	0x007C, r24
	sei();
 24e:	78 94       	sei
		
	ADCSRA|=(1<<ADSC);
 250:	ea e7       	ldi	r30, 0x7A	; 122
 252:	f0 e0       	ldi	r31, 0x00	; 0
 254:	80 81       	ld	r24, Z
 256:	80 64       	ori	r24, 0x40	; 64
 258:	80 83       	st	Z, r24
	
	init_LCD();
 25a:	0e 94 de 00 	call	0x1bc	; 0x1bc <init_LCD>
	//move_back(5);//close curtains
	LCDWriteString("Welcome");
 25e:	80 e0       	ldi	r24, 0x00	; 0
 260:	91 e0       	ldi	r25, 0x01	; 1
 262:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
 266:	9f e7       	ldi	r25, 0x7F	; 127
 268:	ea e1       	ldi	r30, 0x1A	; 26
 26a:	f6 e0       	ldi	r31, 0x06	; 6
 26c:	91 50       	subi	r25, 0x01	; 1
 26e:	e0 40       	sbci	r30, 0x00	; 0
 270:	f0 40       	sbci	r31, 0x00	; 0
 272:	e1 f7       	brne	.-8      	; 0x26c <main+0x66>
 274:	00 c0       	rjmp	.+0      	; 0x276 <main+0x70>
 276:	00 00       	nop
	{
		if(bit_is_set(PINC,1)){
			mode=overide_mode;
		}
		else{
			mode=auto_mode;
 278:	c1 e0       	ldi	r28, 0x01	; 1
 27a:	d0 e0       	ldi	r29, 0x00	; 0
			_delay_ms(1000);
			LCDWriteString("Dark Bright");
			
					LCD_cmd(0x01); // clear LCD
					LCDWriteString("Level: ");
					LCD_write(brightness);
 27c:	02 eb       	ldi	r16, 0xB2	; 178
 27e:	11 e0       	ldi	r17, 0x01	; 1
	//move_back(5);//close curtains
	LCDWriteString("Welcome");
	_delay_ms(2000);
	while(1)
	{
		if(bit_is_set(PINC,1)){
 280:	31 9b       	sbis	0x06, 1	; 6
 282:	05 c0       	rjmp	.+10     	; 0x28e <main+0x88>
			mode=overide_mode;
 284:	10 92 b7 01 	sts	0x01B7, r1
 288:	10 92 b6 01 	sts	0x01B6, r1
 28c:	04 c0       	rjmp	.+8      	; 0x296 <main+0x90>
		}
		else{
			mode=auto_mode;
 28e:	d0 93 b7 01 	sts	0x01B7, r29
 292:	c0 93 b6 01 	sts	0x01B6, r28
		}
		
		
		//TODO:: Please write your application code
		if(outside==outside_dark && state==state_open && mode==auto_mode){
 296:	80 91 b4 01 	lds	r24, 0x01B4
 29a:	90 91 b5 01 	lds	r25, 0x01B5
 29e:	00 97       	sbiw	r24, 0x00	; 0
 2a0:	09 f0       	breq	.+2      	; 0x2a4 <main+0x9e>
 2a2:	61 c0       	rjmp	.+194    	; 0x366 <main+0x160>
 2a4:	80 91 b8 01 	lds	r24, 0x01B8
 2a8:	90 91 b9 01 	lds	r25, 0x01B9
 2ac:	01 97       	sbiw	r24, 0x01	; 1
 2ae:	09 f0       	breq	.+2      	; 0x2b2 <main+0xac>
 2b0:	bf c0       	rjmp	.+382    	; 0x430 <main+0x22a>
 2b2:	80 91 b6 01 	lds	r24, 0x01B6
 2b6:	90 91 b7 01 	lds	r25, 0x01B7
 2ba:	01 97       	sbiw	r24, 0x01	; 1
 2bc:	09 f0       	breq	.+2      	; 0x2c0 <main+0xba>
 2be:	b8 c0       	rjmp	.+368    	; 0x430 <main+0x22a>
			LCDWriteString("Dark Oustside");
 2c0:	88 e0       	ldi	r24, 0x08	; 8
 2c2:	91 e0       	ldi	r25, 0x01	; 1
 2c4:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
 2c8:	2f e3       	ldi	r18, 0x3F	; 63
 2ca:	8d e0       	ldi	r24, 0x0D	; 13
 2cc:	93 e0       	ldi	r25, 0x03	; 3
 2ce:	21 50       	subi	r18, 0x01	; 1
 2d0:	80 40       	sbci	r24, 0x00	; 0
 2d2:	90 40       	sbci	r25, 0x00	; 0
 2d4:	e1 f7       	brne	.-8      	; 0x2ce <main+0xc8>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <main+0xd2>
 2d8:	00 00       	nop
			_delay_ms(1000);
			LCDWriteString("Lights On");
 2da:	86 e1       	ldi	r24, 0x16	; 22
 2dc:	91 e0       	ldi	r25, 0x01	; 1
 2de:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
			PORTB |=1<<PORTB3;
 2e2:	2b 9a       	sbi	0x05, 3	; 5
 2e4:	ef e9       	ldi	r30, 0x9F	; 159
 2e6:	f6 e8       	ldi	r31, 0x86	; 134
 2e8:	21 e0       	ldi	r18, 0x01	; 1
 2ea:	e1 50       	subi	r30, 0x01	; 1
 2ec:	f0 40       	sbci	r31, 0x00	; 0
 2ee:	20 40       	sbci	r18, 0x00	; 0
 2f0:	e1 f7       	brne	.-8      	; 0x2ea <main+0xe4>
 2f2:	00 c0       	rjmp	.+0      	; 0x2f4 <main+0xee>
 2f4:	00 00       	nop
			_delay_ms(500);
			LCDWriteString("Curtains Closing ...");
 2f6:	80 e2       	ldi	r24, 0x20	; 32
 2f8:	91 e0       	ldi	r25, 0x01	; 1
 2fa:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
			move_back(5);//close curtains
 2fe:	85 e0       	ldi	r24, 0x05	; 5
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	0e 94 95 00 	call	0x12a	; 0x12a <move_back>
			state=state_closed;
 306:	10 92 b9 01 	sts	0x01B9, r1
 30a:	10 92 b8 01 	sts	0x01B8, r1
			LCDWriteString("Curtains Closed");
 30e:	85 e3       	ldi	r24, 0x35	; 53
 310:	91 e0       	ldi	r25, 0x01	; 1
 312:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
 316:	8f e3       	ldi	r24, 0x3F	; 63
 318:	9d e0       	ldi	r25, 0x0D	; 13
 31a:	e3 e0       	ldi	r30, 0x03	; 3
 31c:	81 50       	subi	r24, 0x01	; 1
 31e:	90 40       	sbci	r25, 0x00	; 0
 320:	e0 40       	sbci	r30, 0x00	; 0
 322:	e1 f7       	brne	.-8      	; 0x31c <main+0x116>
 324:	00 c0       	rjmp	.+0      	; 0x326 <main+0x120>
 326:	00 00       	nop
			_delay_ms(1000);
			LCDWriteString("Dark Outside");
 328:	85 e4       	ldi	r24, 0x45	; 69
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
			
					LCD_cmd(0x01); // clear LCD
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_cmd>
					LCDWriteString("Level: ");
 336:	82 e5       	ldi	r24, 0x52	; 82
 338:	91 e0       	ldi	r25, 0x01	; 1
 33a:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
					LCD_write(brightness);
 33e:	f8 01       	movw	r30, r16
 340:	80 81       	ld	r24, Z
 342:	0e 94 64 00 	call	0xc8	; 0xc8 <LCD_write>
 346:	89 ef       	ldi	r24, 0xF9	; 249
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	01 97       	sbiw	r24, 0x01	; 1
 34c:	f1 f7       	brne	.-4      	; 0x34a <main+0x144>
 34e:	00 c0       	rjmp	.+0      	; 0x350 <main+0x14a>
 350:	00 00       	nop
 352:	9f e3       	ldi	r25, 0x3F	; 63
 354:	ed e0       	ldi	r30, 0x0D	; 13
 356:	f3 e0       	ldi	r31, 0x03	; 3
 358:	91 50       	subi	r25, 0x01	; 1
 35a:	e0 40       	sbci	r30, 0x00	; 0
 35c:	f0 40       	sbci	r31, 0x00	; 0
 35e:	e1 f7       	brne	.-8      	; 0x358 <main+0x152>
 360:	00 c0       	rjmp	.+0      	; 0x362 <main+0x15c>
 362:	00 00       	nop
 364:	8d cf       	rjmp	.-230    	; 0x280 <main+0x7a>
					_delay_ms(1);
					_delay_ms(1000);
		}
		else if(outside==outside_bright && state==state_closed && mode==auto_mode){
 366:	01 97       	sbiw	r24, 0x01	; 1
 368:	09 f0       	breq	.+2      	; 0x36c <main+0x166>
 36a:	62 c0       	rjmp	.+196    	; 0x430 <main+0x22a>
 36c:	80 91 b8 01 	lds	r24, 0x01B8
 370:	90 91 b9 01 	lds	r25, 0x01B9
 374:	89 2b       	or	r24, r25
 376:	09 f0       	breq	.+2      	; 0x37a <main+0x174>
 378:	5b c0       	rjmp	.+182    	; 0x430 <main+0x22a>
 37a:	80 91 b6 01 	lds	r24, 0x01B6
 37e:	90 91 b7 01 	lds	r25, 0x01B7
 382:	01 97       	sbiw	r24, 0x01	; 1
 384:	09 f0       	breq	.+2      	; 0x388 <main+0x182>
 386:	54 c0       	rjmp	.+168    	; 0x430 <main+0x22a>
			LCDWriteString("Bright Oustside");
 388:	8a e5       	ldi	r24, 0x5A	; 90
 38a:	91 e0       	ldi	r25, 0x01	; 1
 38c:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
 390:	2f e3       	ldi	r18, 0x3F	; 63
 392:	8d e0       	ldi	r24, 0x0D	; 13
 394:	93 e0       	ldi	r25, 0x03	; 3
 396:	21 50       	subi	r18, 0x01	; 1
 398:	80 40       	sbci	r24, 0x00	; 0
 39a:	90 40       	sbci	r25, 0x00	; 0
 39c:	e1 f7       	brne	.-8      	; 0x396 <main+0x190>
 39e:	00 c0       	rjmp	.+0      	; 0x3a0 <main+0x19a>
 3a0:	00 00       	nop
			_delay_ms(1000);
			LCDWriteString("Lights Off");
 3a2:	8a e6       	ldi	r24, 0x6A	; 106
 3a4:	91 e0       	ldi	r25, 0x01	; 1
 3a6:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
			PORTB &=0<<PORTB3;
 3aa:	85 b1       	in	r24, 0x05	; 5
 3ac:	15 b8       	out	0x05, r1	; 5
 3ae:	ef e9       	ldi	r30, 0x9F	; 159
 3b0:	f6 e8       	ldi	r31, 0x86	; 134
 3b2:	21 e0       	ldi	r18, 0x01	; 1
 3b4:	e1 50       	subi	r30, 0x01	; 1
 3b6:	f0 40       	sbci	r31, 0x00	; 0
 3b8:	20 40       	sbci	r18, 0x00	; 0
 3ba:	e1 f7       	brne	.-8      	; 0x3b4 <main+0x1ae>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <main+0x1b8>
 3be:	00 00       	nop
			_delay_ms(500);
			LCDWriteString("Curtains opening ...");
 3c0:	85 e7       	ldi	r24, 0x75	; 117
 3c2:	91 e0       	ldi	r25, 0x01	; 1
 3c4:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
			move_forward(5);//open curtains
 3c8:	85 e0       	ldi	r24, 0x05	; 5
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	0e 94 76 00 	call	0xec	; 0xec <move_forward>
			state=state_open;
 3d0:	d0 93 b9 01 	sts	0x01B9, r29
 3d4:	c0 93 b8 01 	sts	0x01B8, r28
			LCDWriteString("Curtains Open");
 3d8:	8a e8       	ldi	r24, 0x8A	; 138
 3da:	91 e0       	ldi	r25, 0x01	; 1
 3dc:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
 3e0:	8f e3       	ldi	r24, 0x3F	; 63
 3e2:	9d e0       	ldi	r25, 0x0D	; 13
 3e4:	e3 e0       	ldi	r30, 0x03	; 3
 3e6:	81 50       	subi	r24, 0x01	; 1
 3e8:	90 40       	sbci	r25, 0x00	; 0
 3ea:	e0 40       	sbci	r30, 0x00	; 0
 3ec:	e1 f7       	brne	.-8      	; 0x3e6 <main+0x1e0>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <main+0x1ea>
 3f0:	00 00       	nop
			_delay_ms(1000);
			LCDWriteString("Dark Bright");
 3f2:	88 e9       	ldi	r24, 0x98	; 152
 3f4:	91 e0       	ldi	r25, 0x01	; 1
 3f6:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
			
					LCD_cmd(0x01); // clear LCD
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_cmd>
					LCDWriteString("Level: ");
 400:	82 e5       	ldi	r24, 0x52	; 82
 402:	91 e0       	ldi	r25, 0x01	; 1
 404:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
					LCD_write(brightness);
 408:	f8 01       	movw	r30, r16
 40a:	80 81       	ld	r24, Z
 40c:	0e 94 64 00 	call	0xc8	; 0xc8 <LCD_write>
 410:	89 ef       	ldi	r24, 0xF9	; 249
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	01 97       	sbiw	r24, 0x01	; 1
 416:	f1 f7       	brne	.-4      	; 0x414 <main+0x20e>
 418:	00 c0       	rjmp	.+0      	; 0x41a <main+0x214>
 41a:	00 00       	nop
 41c:	9f e3       	ldi	r25, 0x3F	; 63
 41e:	ed e0       	ldi	r30, 0x0D	; 13
 420:	f3 e0       	ldi	r31, 0x03	; 3
 422:	91 50       	subi	r25, 0x01	; 1
 424:	e0 40       	sbci	r30, 0x00	; 0
 426:	f0 40       	sbci	r31, 0x00	; 0
 428:	e1 f7       	brne	.-8      	; 0x422 <main+0x21c>
 42a:	00 c0       	rjmp	.+0      	; 0x42c <main+0x226>
 42c:	00 00       	nop
 42e:	28 cf       	rjmp	.-432    	; 0x280 <main+0x7a>
					_delay_ms(1);
					_delay_ms(1000);
		}
		else if(mode==overide_mode){
 430:	80 91 b6 01 	lds	r24, 0x01B6
 434:	90 91 b7 01 	lds	r25, 0x01B7
 438:	89 2b       	or	r24, r25
 43a:	09 f0       	breq	.+2      	; 0x43e <main+0x238>
 43c:	21 cf       	rjmp	.-446    	; 0x280 <main+0x7a>
			LCDWriteString("Override Mode");
 43e:	84 ea       	ldi	r24, 0xA4	; 164
 440:	91 e0       	ldi	r25, 0x01	; 1
 442:	0e 94 b4 00 	call	0x168	; 0x168 <LCDWriteString>
 446:	2f e3       	ldi	r18, 0x3F	; 63
 448:	8d e0       	ldi	r24, 0x0D	; 13
 44a:	93 e0       	ldi	r25, 0x03	; 3
 44c:	21 50       	subi	r18, 0x01	; 1
 44e:	80 40       	sbci	r24, 0x00	; 0
 450:	90 40       	sbci	r25, 0x00	; 0
 452:	e1 f7       	brne	.-8      	; 0x44c <main+0x246>
 454:	00 c0       	rjmp	.+0      	; 0x456 <main+0x250>
 456:	00 00       	nop
 458:	13 cf       	rjmp	.-474    	; 0x280 <main+0x7a>

0000045a <__vector_21>:
			_delay_ms(1000);
		}
	}
}

ISR(ADC_vect){
 45a:	1f 92       	push	r1
 45c:	0f 92       	push	r0
 45e:	0f b6       	in	r0, 0x3f	; 63
 460:	0f 92       	push	r0
 462:	11 24       	eor	r1, r1
 464:	2f 93       	push	r18
 466:	3f 93       	push	r19
 468:	4f 93       	push	r20
 46a:	5f 93       	push	r21
 46c:	6f 93       	push	r22
 46e:	7f 93       	push	r23
 470:	8f 93       	push	r24
 472:	9f 93       	push	r25
 474:	af 93       	push	r26
 476:	bf 93       	push	r27
 478:	ef 93       	push	r30
 47a:	ff 93       	push	r31
	
	uint16_t x= (ADCL>>6);
 47c:	80 91 78 00 	lds	r24, 0x0078
 480:	82 95       	swap	r24
 482:	86 95       	lsr	r24
 484:	86 95       	lsr	r24
 486:	83 70       	andi	r24, 0x03	; 3
	uint16_t y=(ADCH<<2);
 488:	60 91 79 00 	lds	r22, 0x0079
 48c:	70 e0       	ldi	r23, 0x00	; 0
 48e:	66 0f       	add	r22, r22
 490:	77 1f       	adc	r23, r23
 492:	66 0f       	add	r22, r22
 494:	77 1f       	adc	r23, r23
	x=x|y;
 496:	68 2b       	or	r22, r24
	brightness=(x/102.4)+48;
 498:	80 e0       	ldi	r24, 0x00	; 0
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	0e 94 7f 03 	call	0x6fe	; 0x6fe <__floatunsisf>
 4a0:	2d ec       	ldi	r18, 0xCD	; 205
 4a2:	3c ec       	ldi	r19, 0xCC	; 204
 4a4:	4c ec       	ldi	r20, 0xCC	; 204
 4a6:	52 e4       	ldi	r21, 0x42	; 66
 4a8:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__divsf3>
 4ac:	20 e0       	ldi	r18, 0x00	; 0
 4ae:	30 e0       	ldi	r19, 0x00	; 0
 4b0:	40 e4       	ldi	r20, 0x40	; 64
 4b2:	52 e4       	ldi	r21, 0x42	; 66
 4b4:	0e 94 87 02 	call	0x50e	; 0x50e <__addsf3>
 4b8:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__fixunssfsi>
 4bc:	70 93 b3 01 	sts	0x01B3, r23
 4c0:	60 93 b2 01 	sts	0x01B2, r22
	if(brightness>outside_threshold){
 4c4:	66 33       	cpi	r22, 0x36	; 54
 4c6:	71 05       	cpc	r23, r1
 4c8:	28 f0       	brcs	.+10     	; 0x4d4 <__vector_21+0x7a>
		outside=outside_dark;
 4ca:	10 92 b5 01 	sts	0x01B5, r1
 4ce:	10 92 b4 01 	sts	0x01B4, r1
 4d2:	06 c0       	rjmp	.+12     	; 0x4e0 <__vector_21+0x86>
	}
	else{
		outside=outside_bright;
 4d4:	81 e0       	ldi	r24, 0x01	; 1
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	90 93 b5 01 	sts	0x01B5, r25
 4dc:	80 93 b4 01 	sts	0x01B4, r24
	}
	
		
	ADCSRA |= 1<<ADSC;
 4e0:	ea e7       	ldi	r30, 0x7A	; 122
 4e2:	f0 e0       	ldi	r31, 0x00	; 0
 4e4:	80 81       	ld	r24, Z
 4e6:	80 64       	ori	r24, 0x40	; 64
 4e8:	80 83       	st	Z, r24
	
 4ea:	ff 91       	pop	r31
 4ec:	ef 91       	pop	r30
 4ee:	bf 91       	pop	r27
 4f0:	af 91       	pop	r26
 4f2:	9f 91       	pop	r25
 4f4:	8f 91       	pop	r24
 4f6:	7f 91       	pop	r23
 4f8:	6f 91       	pop	r22
 4fa:	5f 91       	pop	r21
 4fc:	4f 91       	pop	r20
 4fe:	3f 91       	pop	r19
 500:	2f 91       	pop	r18
 502:	0f 90       	pop	r0
 504:	0f be       	out	0x3f, r0	; 63
 506:	0f 90       	pop	r0
 508:	1f 90       	pop	r1
 50a:	18 95       	reti

0000050c <__subsf3>:
 50c:	50 58       	subi	r21, 0x80	; 128

0000050e <__addsf3>:
 50e:	bb 27       	eor	r27, r27
 510:	aa 27       	eor	r26, r26
 512:	0e d0       	rcall	.+28     	; 0x530 <__addsf3x>
 514:	48 c1       	rjmp	.+656    	; 0x7a6 <__fp_round>
 516:	39 d1       	rcall	.+626    	; 0x78a <__fp_pscA>
 518:	30 f0       	brcs	.+12     	; 0x526 <__addsf3+0x18>
 51a:	3e d1       	rcall	.+636    	; 0x798 <__fp_pscB>
 51c:	20 f0       	brcs	.+8      	; 0x526 <__addsf3+0x18>
 51e:	31 f4       	brne	.+12     	; 0x52c <__addsf3+0x1e>
 520:	9f 3f       	cpi	r25, 0xFF	; 255
 522:	11 f4       	brne	.+4      	; 0x528 <__addsf3+0x1a>
 524:	1e f4       	brtc	.+6      	; 0x52c <__addsf3+0x1e>
 526:	2e c1       	rjmp	.+604    	; 0x784 <__fp_nan>
 528:	0e f4       	brtc	.+2      	; 0x52c <__addsf3+0x1e>
 52a:	e0 95       	com	r30
 52c:	e7 fb       	bst	r30, 7
 52e:	24 c1       	rjmp	.+584    	; 0x778 <__fp_inf>

00000530 <__addsf3x>:
 530:	e9 2f       	mov	r30, r25
 532:	4a d1       	rcall	.+660    	; 0x7c8 <__fp_split3>
 534:	80 f3       	brcs	.-32     	; 0x516 <__addsf3+0x8>
 536:	ba 17       	cp	r27, r26
 538:	62 07       	cpc	r22, r18
 53a:	73 07       	cpc	r23, r19
 53c:	84 07       	cpc	r24, r20
 53e:	95 07       	cpc	r25, r21
 540:	18 f0       	brcs	.+6      	; 0x548 <__addsf3x+0x18>
 542:	71 f4       	brne	.+28     	; 0x560 <__addsf3x+0x30>
 544:	9e f5       	brtc	.+102    	; 0x5ac <__addsf3x+0x7c>
 546:	62 c1       	rjmp	.+708    	; 0x80c <__fp_zero>
 548:	0e f4       	brtc	.+2      	; 0x54c <__addsf3x+0x1c>
 54a:	e0 95       	com	r30
 54c:	0b 2e       	mov	r0, r27
 54e:	ba 2f       	mov	r27, r26
 550:	a0 2d       	mov	r26, r0
 552:	0b 01       	movw	r0, r22
 554:	b9 01       	movw	r22, r18
 556:	90 01       	movw	r18, r0
 558:	0c 01       	movw	r0, r24
 55a:	ca 01       	movw	r24, r20
 55c:	a0 01       	movw	r20, r0
 55e:	11 24       	eor	r1, r1
 560:	ff 27       	eor	r31, r31
 562:	59 1b       	sub	r21, r25
 564:	99 f0       	breq	.+38     	; 0x58c <__addsf3x+0x5c>
 566:	59 3f       	cpi	r21, 0xF9	; 249
 568:	50 f4       	brcc	.+20     	; 0x57e <__addsf3x+0x4e>
 56a:	50 3e       	cpi	r21, 0xE0	; 224
 56c:	68 f1       	brcs	.+90     	; 0x5c8 <__addsf3x+0x98>
 56e:	1a 16       	cp	r1, r26
 570:	f0 40       	sbci	r31, 0x00	; 0
 572:	a2 2f       	mov	r26, r18
 574:	23 2f       	mov	r18, r19
 576:	34 2f       	mov	r19, r20
 578:	44 27       	eor	r20, r20
 57a:	58 5f       	subi	r21, 0xF8	; 248
 57c:	f3 cf       	rjmp	.-26     	; 0x564 <__addsf3x+0x34>
 57e:	46 95       	lsr	r20
 580:	37 95       	ror	r19
 582:	27 95       	ror	r18
 584:	a7 95       	ror	r26
 586:	f0 40       	sbci	r31, 0x00	; 0
 588:	53 95       	inc	r21
 58a:	c9 f7       	brne	.-14     	; 0x57e <__addsf3x+0x4e>
 58c:	7e f4       	brtc	.+30     	; 0x5ac <__addsf3x+0x7c>
 58e:	1f 16       	cp	r1, r31
 590:	ba 0b       	sbc	r27, r26
 592:	62 0b       	sbc	r22, r18
 594:	73 0b       	sbc	r23, r19
 596:	84 0b       	sbc	r24, r20
 598:	ba f0       	brmi	.+46     	; 0x5c8 <__addsf3x+0x98>
 59a:	91 50       	subi	r25, 0x01	; 1
 59c:	a1 f0       	breq	.+40     	; 0x5c6 <__addsf3x+0x96>
 59e:	ff 0f       	add	r31, r31
 5a0:	bb 1f       	adc	r27, r27
 5a2:	66 1f       	adc	r22, r22
 5a4:	77 1f       	adc	r23, r23
 5a6:	88 1f       	adc	r24, r24
 5a8:	c2 f7       	brpl	.-16     	; 0x59a <__addsf3x+0x6a>
 5aa:	0e c0       	rjmp	.+28     	; 0x5c8 <__addsf3x+0x98>
 5ac:	ba 0f       	add	r27, r26
 5ae:	62 1f       	adc	r22, r18
 5b0:	73 1f       	adc	r23, r19
 5b2:	84 1f       	adc	r24, r20
 5b4:	48 f4       	brcc	.+18     	; 0x5c8 <__addsf3x+0x98>
 5b6:	87 95       	ror	r24
 5b8:	77 95       	ror	r23
 5ba:	67 95       	ror	r22
 5bc:	b7 95       	ror	r27
 5be:	f7 95       	ror	r31
 5c0:	9e 3f       	cpi	r25, 0xFE	; 254
 5c2:	08 f0       	brcs	.+2      	; 0x5c6 <__addsf3x+0x96>
 5c4:	b3 cf       	rjmp	.-154    	; 0x52c <__addsf3+0x1e>
 5c6:	93 95       	inc	r25
 5c8:	88 0f       	add	r24, r24
 5ca:	08 f0       	brcs	.+2      	; 0x5ce <__addsf3x+0x9e>
 5cc:	99 27       	eor	r25, r25
 5ce:	ee 0f       	add	r30, r30
 5d0:	97 95       	ror	r25
 5d2:	87 95       	ror	r24
 5d4:	08 95       	ret

000005d6 <__divsf3>:
 5d6:	0c d0       	rcall	.+24     	; 0x5f0 <__divsf3x>
 5d8:	e6 c0       	rjmp	.+460    	; 0x7a6 <__fp_round>
 5da:	de d0       	rcall	.+444    	; 0x798 <__fp_pscB>
 5dc:	40 f0       	brcs	.+16     	; 0x5ee <__divsf3+0x18>
 5de:	d5 d0       	rcall	.+426    	; 0x78a <__fp_pscA>
 5e0:	30 f0       	brcs	.+12     	; 0x5ee <__divsf3+0x18>
 5e2:	21 f4       	brne	.+8      	; 0x5ec <__divsf3+0x16>
 5e4:	5f 3f       	cpi	r21, 0xFF	; 255
 5e6:	19 f0       	breq	.+6      	; 0x5ee <__divsf3+0x18>
 5e8:	c7 c0       	rjmp	.+398    	; 0x778 <__fp_inf>
 5ea:	51 11       	cpse	r21, r1
 5ec:	10 c1       	rjmp	.+544    	; 0x80e <__fp_szero>
 5ee:	ca c0       	rjmp	.+404    	; 0x784 <__fp_nan>

000005f0 <__divsf3x>:
 5f0:	eb d0       	rcall	.+470    	; 0x7c8 <__fp_split3>
 5f2:	98 f3       	brcs	.-26     	; 0x5da <__divsf3+0x4>

000005f4 <__divsf3_pse>:
 5f4:	99 23       	and	r25, r25
 5f6:	c9 f3       	breq	.-14     	; 0x5ea <__divsf3+0x14>
 5f8:	55 23       	and	r21, r21
 5fa:	b1 f3       	breq	.-20     	; 0x5e8 <__divsf3+0x12>
 5fc:	95 1b       	sub	r25, r21
 5fe:	55 0b       	sbc	r21, r21
 600:	bb 27       	eor	r27, r27
 602:	aa 27       	eor	r26, r26
 604:	62 17       	cp	r22, r18
 606:	73 07       	cpc	r23, r19
 608:	84 07       	cpc	r24, r20
 60a:	38 f0       	brcs	.+14     	; 0x61a <__divsf3_pse+0x26>
 60c:	9f 5f       	subi	r25, 0xFF	; 255
 60e:	5f 4f       	sbci	r21, 0xFF	; 255
 610:	22 0f       	add	r18, r18
 612:	33 1f       	adc	r19, r19
 614:	44 1f       	adc	r20, r20
 616:	aa 1f       	adc	r26, r26
 618:	a9 f3       	breq	.-22     	; 0x604 <__divsf3_pse+0x10>
 61a:	33 d0       	rcall	.+102    	; 0x682 <__divsf3_pse+0x8e>
 61c:	0e 2e       	mov	r0, r30
 61e:	3a f0       	brmi	.+14     	; 0x62e <__divsf3_pse+0x3a>
 620:	e0 e8       	ldi	r30, 0x80	; 128
 622:	30 d0       	rcall	.+96     	; 0x684 <__divsf3_pse+0x90>
 624:	91 50       	subi	r25, 0x01	; 1
 626:	50 40       	sbci	r21, 0x00	; 0
 628:	e6 95       	lsr	r30
 62a:	00 1c       	adc	r0, r0
 62c:	ca f7       	brpl	.-14     	; 0x620 <__divsf3_pse+0x2c>
 62e:	29 d0       	rcall	.+82     	; 0x682 <__divsf3_pse+0x8e>
 630:	fe 2f       	mov	r31, r30
 632:	27 d0       	rcall	.+78     	; 0x682 <__divsf3_pse+0x8e>
 634:	66 0f       	add	r22, r22
 636:	77 1f       	adc	r23, r23
 638:	88 1f       	adc	r24, r24
 63a:	bb 1f       	adc	r27, r27
 63c:	26 17       	cp	r18, r22
 63e:	37 07       	cpc	r19, r23
 640:	48 07       	cpc	r20, r24
 642:	ab 07       	cpc	r26, r27
 644:	b0 e8       	ldi	r27, 0x80	; 128
 646:	09 f0       	breq	.+2      	; 0x64a <__divsf3_pse+0x56>
 648:	bb 0b       	sbc	r27, r27
 64a:	80 2d       	mov	r24, r0
 64c:	bf 01       	movw	r22, r30
 64e:	ff 27       	eor	r31, r31
 650:	93 58       	subi	r25, 0x83	; 131
 652:	5f 4f       	sbci	r21, 0xFF	; 255
 654:	2a f0       	brmi	.+10     	; 0x660 <__divsf3_pse+0x6c>
 656:	9e 3f       	cpi	r25, 0xFE	; 254
 658:	51 05       	cpc	r21, r1
 65a:	68 f0       	brcs	.+26     	; 0x676 <__divsf3_pse+0x82>
 65c:	8d c0       	rjmp	.+282    	; 0x778 <__fp_inf>
 65e:	d7 c0       	rjmp	.+430    	; 0x80e <__fp_szero>
 660:	5f 3f       	cpi	r21, 0xFF	; 255
 662:	ec f3       	brlt	.-6      	; 0x65e <__divsf3_pse+0x6a>
 664:	98 3e       	cpi	r25, 0xE8	; 232
 666:	dc f3       	brlt	.-10     	; 0x65e <__divsf3_pse+0x6a>
 668:	86 95       	lsr	r24
 66a:	77 95       	ror	r23
 66c:	67 95       	ror	r22
 66e:	b7 95       	ror	r27
 670:	f7 95       	ror	r31
 672:	9f 5f       	subi	r25, 0xFF	; 255
 674:	c9 f7       	brne	.-14     	; 0x668 <__divsf3_pse+0x74>
 676:	88 0f       	add	r24, r24
 678:	91 1d       	adc	r25, r1
 67a:	96 95       	lsr	r25
 67c:	87 95       	ror	r24
 67e:	97 f9       	bld	r25, 7
 680:	08 95       	ret
 682:	e1 e0       	ldi	r30, 0x01	; 1
 684:	66 0f       	add	r22, r22
 686:	77 1f       	adc	r23, r23
 688:	88 1f       	adc	r24, r24
 68a:	bb 1f       	adc	r27, r27
 68c:	62 17       	cp	r22, r18
 68e:	73 07       	cpc	r23, r19
 690:	84 07       	cpc	r24, r20
 692:	ba 07       	cpc	r27, r26
 694:	20 f0       	brcs	.+8      	; 0x69e <__divsf3_pse+0xaa>
 696:	62 1b       	sub	r22, r18
 698:	73 0b       	sbc	r23, r19
 69a:	84 0b       	sbc	r24, r20
 69c:	ba 0b       	sbc	r27, r26
 69e:	ee 1f       	adc	r30, r30
 6a0:	88 f7       	brcc	.-30     	; 0x684 <__divsf3_pse+0x90>
 6a2:	e0 95       	com	r30
 6a4:	08 95       	ret

000006a6 <__fixunssfsi>:
 6a6:	98 d0       	rcall	.+304    	; 0x7d8 <__fp_splitA>
 6a8:	88 f0       	brcs	.+34     	; 0x6cc <__fixunssfsi+0x26>
 6aa:	9f 57       	subi	r25, 0x7F	; 127
 6ac:	90 f0       	brcs	.+36     	; 0x6d2 <__fixunssfsi+0x2c>
 6ae:	b9 2f       	mov	r27, r25
 6b0:	99 27       	eor	r25, r25
 6b2:	b7 51       	subi	r27, 0x17	; 23
 6b4:	a0 f0       	brcs	.+40     	; 0x6de <__fixunssfsi+0x38>
 6b6:	d1 f0       	breq	.+52     	; 0x6ec <__fixunssfsi+0x46>
 6b8:	66 0f       	add	r22, r22
 6ba:	77 1f       	adc	r23, r23
 6bc:	88 1f       	adc	r24, r24
 6be:	99 1f       	adc	r25, r25
 6c0:	1a f0       	brmi	.+6      	; 0x6c8 <__fixunssfsi+0x22>
 6c2:	ba 95       	dec	r27
 6c4:	c9 f7       	brne	.-14     	; 0x6b8 <__fixunssfsi+0x12>
 6c6:	12 c0       	rjmp	.+36     	; 0x6ec <__fixunssfsi+0x46>
 6c8:	b1 30       	cpi	r27, 0x01	; 1
 6ca:	81 f0       	breq	.+32     	; 0x6ec <__fixunssfsi+0x46>
 6cc:	9f d0       	rcall	.+318    	; 0x80c <__fp_zero>
 6ce:	b1 e0       	ldi	r27, 0x01	; 1
 6d0:	08 95       	ret
 6d2:	9c c0       	rjmp	.+312    	; 0x80c <__fp_zero>
 6d4:	67 2f       	mov	r22, r23
 6d6:	78 2f       	mov	r23, r24
 6d8:	88 27       	eor	r24, r24
 6da:	b8 5f       	subi	r27, 0xF8	; 248
 6dc:	39 f0       	breq	.+14     	; 0x6ec <__fixunssfsi+0x46>
 6de:	b9 3f       	cpi	r27, 0xF9	; 249
 6e0:	cc f3       	brlt	.-14     	; 0x6d4 <__fixunssfsi+0x2e>
 6e2:	86 95       	lsr	r24
 6e4:	77 95       	ror	r23
 6e6:	67 95       	ror	r22
 6e8:	b3 95       	inc	r27
 6ea:	d9 f7       	brne	.-10     	; 0x6e2 <__fixunssfsi+0x3c>
 6ec:	3e f4       	brtc	.+14     	; 0x6fc <__fixunssfsi+0x56>
 6ee:	90 95       	com	r25
 6f0:	80 95       	com	r24
 6f2:	70 95       	com	r23
 6f4:	61 95       	neg	r22
 6f6:	7f 4f       	sbci	r23, 0xFF	; 255
 6f8:	8f 4f       	sbci	r24, 0xFF	; 255
 6fa:	9f 4f       	sbci	r25, 0xFF	; 255
 6fc:	08 95       	ret

000006fe <__floatunsisf>:
 6fe:	e8 94       	clt
 700:	09 c0       	rjmp	.+18     	; 0x714 <__floatsisf+0x12>

00000702 <__floatsisf>:
 702:	97 fb       	bst	r25, 7
 704:	3e f4       	brtc	.+14     	; 0x714 <__floatsisf+0x12>
 706:	90 95       	com	r25
 708:	80 95       	com	r24
 70a:	70 95       	com	r23
 70c:	61 95       	neg	r22
 70e:	7f 4f       	sbci	r23, 0xFF	; 255
 710:	8f 4f       	sbci	r24, 0xFF	; 255
 712:	9f 4f       	sbci	r25, 0xFF	; 255
 714:	99 23       	and	r25, r25
 716:	a9 f0       	breq	.+42     	; 0x742 <__floatsisf+0x40>
 718:	f9 2f       	mov	r31, r25
 71a:	96 e9       	ldi	r25, 0x96	; 150
 71c:	bb 27       	eor	r27, r27
 71e:	93 95       	inc	r25
 720:	f6 95       	lsr	r31
 722:	87 95       	ror	r24
 724:	77 95       	ror	r23
 726:	67 95       	ror	r22
 728:	b7 95       	ror	r27
 72a:	f1 11       	cpse	r31, r1
 72c:	f8 cf       	rjmp	.-16     	; 0x71e <__floatsisf+0x1c>
 72e:	fa f4       	brpl	.+62     	; 0x76e <__floatsisf+0x6c>
 730:	bb 0f       	add	r27, r27
 732:	11 f4       	brne	.+4      	; 0x738 <__floatsisf+0x36>
 734:	60 ff       	sbrs	r22, 0
 736:	1b c0       	rjmp	.+54     	; 0x76e <__floatsisf+0x6c>
 738:	6f 5f       	subi	r22, 0xFF	; 255
 73a:	7f 4f       	sbci	r23, 0xFF	; 255
 73c:	8f 4f       	sbci	r24, 0xFF	; 255
 73e:	9f 4f       	sbci	r25, 0xFF	; 255
 740:	16 c0       	rjmp	.+44     	; 0x76e <__floatsisf+0x6c>
 742:	88 23       	and	r24, r24
 744:	11 f0       	breq	.+4      	; 0x74a <__floatsisf+0x48>
 746:	96 e9       	ldi	r25, 0x96	; 150
 748:	11 c0       	rjmp	.+34     	; 0x76c <__floatsisf+0x6a>
 74a:	77 23       	and	r23, r23
 74c:	21 f0       	breq	.+8      	; 0x756 <__floatsisf+0x54>
 74e:	9e e8       	ldi	r25, 0x8E	; 142
 750:	87 2f       	mov	r24, r23
 752:	76 2f       	mov	r23, r22
 754:	05 c0       	rjmp	.+10     	; 0x760 <__floatsisf+0x5e>
 756:	66 23       	and	r22, r22
 758:	71 f0       	breq	.+28     	; 0x776 <__floatsisf+0x74>
 75a:	96 e8       	ldi	r25, 0x86	; 134
 75c:	86 2f       	mov	r24, r22
 75e:	70 e0       	ldi	r23, 0x00	; 0
 760:	60 e0       	ldi	r22, 0x00	; 0
 762:	2a f0       	brmi	.+10     	; 0x76e <__floatsisf+0x6c>
 764:	9a 95       	dec	r25
 766:	66 0f       	add	r22, r22
 768:	77 1f       	adc	r23, r23
 76a:	88 1f       	adc	r24, r24
 76c:	da f7       	brpl	.-10     	; 0x764 <__floatsisf+0x62>
 76e:	88 0f       	add	r24, r24
 770:	96 95       	lsr	r25
 772:	87 95       	ror	r24
 774:	97 f9       	bld	r25, 7
 776:	08 95       	ret

00000778 <__fp_inf>:
 778:	97 f9       	bld	r25, 7
 77a:	9f 67       	ori	r25, 0x7F	; 127
 77c:	80 e8       	ldi	r24, 0x80	; 128
 77e:	70 e0       	ldi	r23, 0x00	; 0
 780:	60 e0       	ldi	r22, 0x00	; 0
 782:	08 95       	ret

00000784 <__fp_nan>:
 784:	9f ef       	ldi	r25, 0xFF	; 255
 786:	80 ec       	ldi	r24, 0xC0	; 192
 788:	08 95       	ret

0000078a <__fp_pscA>:
 78a:	00 24       	eor	r0, r0
 78c:	0a 94       	dec	r0
 78e:	16 16       	cp	r1, r22
 790:	17 06       	cpc	r1, r23
 792:	18 06       	cpc	r1, r24
 794:	09 06       	cpc	r0, r25
 796:	08 95       	ret

00000798 <__fp_pscB>:
 798:	00 24       	eor	r0, r0
 79a:	0a 94       	dec	r0
 79c:	12 16       	cp	r1, r18
 79e:	13 06       	cpc	r1, r19
 7a0:	14 06       	cpc	r1, r20
 7a2:	05 06       	cpc	r0, r21
 7a4:	08 95       	ret

000007a6 <__fp_round>:
 7a6:	09 2e       	mov	r0, r25
 7a8:	03 94       	inc	r0
 7aa:	00 0c       	add	r0, r0
 7ac:	11 f4       	brne	.+4      	; 0x7b2 <__fp_round+0xc>
 7ae:	88 23       	and	r24, r24
 7b0:	52 f0       	brmi	.+20     	; 0x7c6 <__fp_round+0x20>
 7b2:	bb 0f       	add	r27, r27
 7b4:	40 f4       	brcc	.+16     	; 0x7c6 <__fp_round+0x20>
 7b6:	bf 2b       	or	r27, r31
 7b8:	11 f4       	brne	.+4      	; 0x7be <__fp_round+0x18>
 7ba:	60 ff       	sbrs	r22, 0
 7bc:	04 c0       	rjmp	.+8      	; 0x7c6 <__fp_round+0x20>
 7be:	6f 5f       	subi	r22, 0xFF	; 255
 7c0:	7f 4f       	sbci	r23, 0xFF	; 255
 7c2:	8f 4f       	sbci	r24, 0xFF	; 255
 7c4:	9f 4f       	sbci	r25, 0xFF	; 255
 7c6:	08 95       	ret

000007c8 <__fp_split3>:
 7c8:	57 fd       	sbrc	r21, 7
 7ca:	90 58       	subi	r25, 0x80	; 128
 7cc:	44 0f       	add	r20, r20
 7ce:	55 1f       	adc	r21, r21
 7d0:	59 f0       	breq	.+22     	; 0x7e8 <__fp_splitA+0x10>
 7d2:	5f 3f       	cpi	r21, 0xFF	; 255
 7d4:	71 f0       	breq	.+28     	; 0x7f2 <__fp_splitA+0x1a>
 7d6:	47 95       	ror	r20

000007d8 <__fp_splitA>:
 7d8:	88 0f       	add	r24, r24
 7da:	97 fb       	bst	r25, 7
 7dc:	99 1f       	adc	r25, r25
 7de:	61 f0       	breq	.+24     	; 0x7f8 <__fp_splitA+0x20>
 7e0:	9f 3f       	cpi	r25, 0xFF	; 255
 7e2:	79 f0       	breq	.+30     	; 0x802 <__fp_splitA+0x2a>
 7e4:	87 95       	ror	r24
 7e6:	08 95       	ret
 7e8:	12 16       	cp	r1, r18
 7ea:	13 06       	cpc	r1, r19
 7ec:	14 06       	cpc	r1, r20
 7ee:	55 1f       	adc	r21, r21
 7f0:	f2 cf       	rjmp	.-28     	; 0x7d6 <__fp_split3+0xe>
 7f2:	46 95       	lsr	r20
 7f4:	f1 df       	rcall	.-30     	; 0x7d8 <__fp_splitA>
 7f6:	08 c0       	rjmp	.+16     	; 0x808 <__fp_splitA+0x30>
 7f8:	16 16       	cp	r1, r22
 7fa:	17 06       	cpc	r1, r23
 7fc:	18 06       	cpc	r1, r24
 7fe:	99 1f       	adc	r25, r25
 800:	f1 cf       	rjmp	.-30     	; 0x7e4 <__fp_splitA+0xc>
 802:	86 95       	lsr	r24
 804:	71 05       	cpc	r23, r1
 806:	61 05       	cpc	r22, r1
 808:	08 94       	sec
 80a:	08 95       	ret

0000080c <__fp_zero>:
 80c:	e8 94       	clt

0000080e <__fp_szero>:
 80e:	bb 27       	eor	r27, r27
 810:	66 27       	eor	r22, r22
 812:	77 27       	eor	r23, r23
 814:	cb 01       	movw	r24, r22
 816:	97 f9       	bld	r25, 7
 818:	08 95       	ret

0000081a <_exit>:
 81a:	f8 94       	cli

0000081c <__stop_program>:
 81c:	ff cf       	rjmp	.-2      	; 0x81c <__stop_program>
